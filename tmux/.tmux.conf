#mudar a tecla leader
set -g prefix C-a
#desativar a leader default
unbind C-b
unbind t

# neovim
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
#set -ga terminal-overrides 'xterm*:\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%{1}%;%d\007'
#set -sg escape-time 10

# tmux.nvim
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# 
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
# 
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# 
# bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
# bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
# bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
# bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1
bind o display-popup -E "docker image ls --format '{{.Repository}}' | fzf | xargs tmux split-window -h docker run --rm -it"

bind s display-popup -E "smug list | fzf | xargs smug start"
bind v display-popup -E "smug list | fzf | xargs smug stop"

#Split window
bind c new-window -c "#{pane_current_path}"
bind C-h split-window -p 20 -v -c "#{pane_current_path}"
bind C-v split-window -p 20 -h -c "#{pane_current_path}"

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

#Mapping movements
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#Resize panes
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5


#Enable mouse, tmux version >= 2.1
set -g mouse on
bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

#sincronizar panes
bind d set-window-option synchronize-panes

#Mode Vim
setw -g mode-keys vi

#Set index 1
set -g base-index 1
set -g pane-base-index 1

set-option -g status on
#set-option -g status-utf8 on

#Define interval
set -g status-interval 60

# setw -g monitor-activity on
# set -g visual-activity on

setw -g monitor-activity off
set -g visual-activity off

#Define history-limit
set -g history-limit 30000

# improve colors                                
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set-option -g bell-action none

# No delay for escape key press
set -sg escape-time 0

# STATUS FULL
#panes
# set -g pane-border-style bg=default,fg=colour7 #colour7
# set -g pane-active-border-style bg=default,fg=colour4 #colour4
# 
#STATUS MINIMALISTA
set -g pane-border-style bg=default,fg=colour232 #colour7
set -g pane-active-border-style bg=default,fg=colour232 #colour4

#statusbar
set -g status-position top
set -g status-justify centre
set -g status-style fg=colour255,bg=colour232
set -g status-left " #S #{session_windows}"
set -g status-right ""
 
#Windows
setw -g window-status-style fg=white,bg=colour0
setw -g window-status-format ' #[fg=colour250]#W#[fg=colour244]#F '
setw -g window-status-current-style fg=colour7,bg=colour0
setw -g window-status-current-format ' #[fg=colour249]#W#[fg=colour249]#F '
set -wg mode-style bg=blue,fg=colour0



# messages
set -g message-style fg=colour4,bg=default


#Current Window Status bar Colors
#set -g window-status-current-fg blue
#setw -g window-status-current-format "[#I:#W]"
#set -g window-status-current-bg red
#set -g window-status-current-attr bold

#Example formating like a boss
#setw -g window-status-current-format " #[fg=green,bg=white] #I #[bg=cyan]#[fg=red] #W "

#abrir o tmux com janelas pre carregadas
#new  -n WindowName Command
#neww -n WindowName Command
#neww -n WindowName Command

#abrir o tmux com janelas com multiplos panes pre carregadas
#new  -s SessionName -n WindowName Command
#neww -n foo/bar foo
#splitw -v -p 50 -t 0 bar
#selectw -t 1 
#selectp -t 0

# Vim style X clipboard integration
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
# bind-key v run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

#start only on no login shell
set -g default-command "${SHELL}"

#reload tmux.conf
bind r source-file ~/.tmux.conf \; display “Reloaded!”

#fzf shortcut
unbind \; 

# List of plugins
# set -g @plugin "arcticicestudio/nord-tmux"
# set -g @nord_tmux_show_status_content "0"
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'wfxr/tmux-fzf-url'
# set -g @plugin 'dracula/tmux'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'laktak/extrakto'

set -g @resurrect-processes 'ssh python cmatrix'
set -g @prefix_highlight_fg 'colour7' # default is 'colour231'
set -g @prefix_highlight_bg 'colour0'  # default is 'colour04'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=white,bg=colour0' # default is 'fg=default,bg=yellow'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)

run -b '~/.tmux/plugins/tpm/tpm'
